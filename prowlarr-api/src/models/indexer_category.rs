/*
 * Prowlarr
 *
 * Prowlarr API docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexerCategory {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "subCategories", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sub_categories: Option<Option<Vec<models::IndexerCategory>>>,
}

impl IndexerCategory {
    pub fn new() -> IndexerCategory {
        IndexerCategory {
            id: None,
            name: None,
            description: None,
            sub_categories: None,
        }
    }
}

