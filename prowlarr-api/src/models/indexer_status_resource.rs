/*
 * Prowlarr
 *
 * Prowlarr API docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexerStatusResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "indexerId", skip_serializing_if = "Option::is_none")]
    pub indexer_id: Option<i32>,
    #[serde(rename = "disabledTill", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub disabled_till: Option<Option<String>>,
    #[serde(rename = "mostRecentFailure", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub most_recent_failure: Option<Option<String>>,
    #[serde(rename = "initialFailure", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub initial_failure: Option<Option<String>>,
}

impl IndexerStatusResource {
    pub fn new() -> IndexerStatusResource {
        IndexerStatusResource {
            id: None,
            indexer_id: None,
            disabled_till: None,
            most_recent_failure: None,
            initial_failure: None,
        }
    }
}

